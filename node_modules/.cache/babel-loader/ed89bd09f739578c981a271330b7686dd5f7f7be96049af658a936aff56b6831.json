{"ast":null,"code":"var _jsxFileName = \"/Users/adityakumarsingh/Repositories/dashtoon_assignment/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\";\nconst API_KEY = \"VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\";\nfunction App() {\n  _s();\n  const [comicText, setComicText] = useState(Array(10).fill(\"\"));\n  const [annotationPanelText, setAnnotationPanelText] = useState(Array(10).fill(\"\"));\n  const [comicImages, setComicImages] = useState(Array(10).fill(null));\n  const [loading, setLoading] = useState(false);\n  const comicDisplayRef = useRef(null);\n  const handleDownloadComic = () => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas dimensions based on the comic display size\n    canvas.width = comicDisplayRef.current.offsetWidth;\n    canvas.height = comicDisplayRef.current.offsetHeight;\n    const comicPanels = comicDisplayRef.current.querySelectorAll(\".comic-panel\");\n    const image = document.querySelector('.hero');\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    comicPanels.forEach((panel, index) => {\n      const leftPanel = document.querySelector('.left');\n      const rect = leftPanel.getBoundingClientRect();\n      const img = panel.querySelector(\"img\");\n      if (!img) {\n        return;\n      }\n      const annotationBox = panel.querySelector(\".box1\");\n      const imgX = panel.offsetLeft - (window.screen.width < 800 ? 0 : rect.width) - 64;\n      const imgY = panel.offsetTop - (window.screen.width < 800 ? rect.height : 0);\n      console.log(index, rect.width, rect.height, imgX, imgY, panel.offsetTop, panel.offsetLeft);\n      const imgWidth = img.width;\n      const imgHeight = img.height;\n\n      // Draw the image onto the canvas\n      ctx.drawImage(img, imgX, imgY, imgWidth, imgHeight);\n\n      // Draw the annotation box onto the canvas\n\n      if (annotationBox) {\n        const annotation = annotationBox.querySelector(\".annotation\").innerText;\n        const boxX = imgX + 20;\n        const boxY = imgY + annotationBox.offsetTop + 32;\n        ctx.fillStyle = \"white\"; // Set the background color of the annotation box\n        ctx.fillRect(boxX, boxY, 230, 30);\n        ctx.font = \"20px Bangers\";\n        ctx.fillStyle = \"black\"; // Set the text color of the annotation\n        ctx.fillText(annotation, boxX + 10, boxY + 25); // Adjust the position as needed\n      }\n    });\n\n    // Convert the canvas content to a data URL and trigger download\n    const dataUrl = canvas.toDataURL(\"image/png\");\n    const a = document.createElement(\"a\");\n    a.href = dataUrl;\n    a.download = \"comic_collage.png\";\n    a.click();\n  };\n  const handleInputChange = (index, value) => {\n    const newText = [...comicText];\n    newText[index] = value;\n    setComicText(newText);\n  };\n  const handleAnnotationChange = (index, value) => {\n    const newAnnotationText = [...annotationPanelText];\n    newAnnotationText[index] = value;\n    setAnnotationPanelText(newAnnotationText);\n  };\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const images = await Promise.all(comicText.map(async (text, index) => {\n        if (!text) {\n          return {\n            imageUrl: null,\n            annotation: \"Write some text instead of generating an image.\"\n          };\n        }\n        const data = {\n          inputs: text\n        };\n        const response = await query(data);\n        if (response.ok) {\n          const imageBlob = await response.blob();\n          const imageUrl = URL.createObjectURL(imageBlob);\n          return {\n            imageUrl,\n            annotation: annotationPanelText[index]\n          };\n        } else {\n          console.error(`Error for Panel ${index + 1}: ${response.statusText}`);\n          return {\n            imageUrl: null,\n            annotation: `Error: ${response.statusText}`\n          };\n        }\n      }));\n      setComicImages(images);\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateAnotherComic = () => {\n    setComicText(Array(10).fill(\"\"));\n    setAnnotationPanelText(Array(10).fill(\"\"));\n    setComicImages(Array(10).fill(null));\n  };\n  const query = async data => {\n    try {\n      const response = await fetch(API_URL, {\n        headers: {\n          Accept: \"image/png\",\n          Authorization: `Bearer ${API_KEY}`,\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response;\n    } catch (error) {\n      console.error(\"Error in query function:\", error.message);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Imagine Your Comics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: [comicText.map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-text\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Describe Image\",\n                style: {\n                  fontFamily: 'Bangers',\n                  fontSize: \"1vw\"\n                },\n                className: \"textarea-name\",\n                value: text,\n                onChange: e => handleInputChange(index, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Annotation-text\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Enter Annotation\",\n                style: {\n                  fontFamily: 'Bangers',\n                  fontSize: \"1vw\"\n                },\n                className: \"textarea-anot \",\n                value: annotationPanelText[index],\n                onChange: e => handleAnnotationChange(index, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleSubmit,\n              disabled: loading,\n              style: {\n                fontSize: \"1vw\",\n                fontWeight: 600,\n                width: \"2vw\",\n                flex: 1,\n                padding: '10px',\n                background: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              children: loading ? \"Generating Comic...\" : \"Create Comic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleGenerateAnotherComic,\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        ref: comicDisplayRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comic-display\",\n          children: comicImages.map((panel, index) => panel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comic-panel\",\n            children: [panel.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: panel.imageUrl,\n              alt: `Create more ${index + 1}`,\n              height: \"250px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this), panel.annotation !== \"\" && panel.annotation !== \"Write some text instead of generating an image.\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box box1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"annotation\",\n                children: panel.annotation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download\",\n          onClick: handleDownloadComic,\n          children: \"Download Comic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require('./Assets/Hero.jpg'),\n      alt: \"\",\n      style: {\n        display: \"none\"\n      },\n      className: \"hero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mDpFT7KN6lNxqH2A83A9tjiQ/tU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","API_URL","API_KEY","App","_s","comicText","setComicText","Array","fill","annotationPanelText","setAnnotationPanelText","comicImages","setComicImages","loading","setLoading","comicDisplayRef","handleDownloadComic","canvas","document","createElement","ctx","getContext","width","current","offsetWidth","height","offsetHeight","comicPanels","querySelectorAll","image","querySelector","drawImage","forEach","panel","index","leftPanel","rect","getBoundingClientRect","img","annotationBox","imgX","offsetLeft","window","screen","imgY","offsetTop","console","log","imgWidth","imgHeight","annotation","innerText","boxX","boxY","fillStyle","fillRect","font","fillText","dataUrl","toDataURL","a","href","download","click","handleInputChange","value","newText","handleAnnotationChange","newAnnotationText","handleSubmit","images","Promise","all","map","text","imageUrl","data","inputs","response","query","ok","imageBlob","blob","URL","createObjectURL","error","statusText","message","handleGenerateAnotherComic","fetch","headers","Accept","Authorization","method","body","JSON","stringify","Error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","placeholder","style","fontFamily","fontSize","onChange","target","type","onClick","disabled","fontWeight","flex","padding","background","color","border","borderRadius","cursor","ref","src","alt","require","display","_c","$RefreshReg$"],"sources":["/Users/adityakumarsingh/Repositories/dashtoon_assignment/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nconst API_URL =\n  \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\";\nconst API_KEY =\n  \"VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\";\n\nfunction App() {\n  const [comicText, setComicText] = useState(Array(10).fill(\"\"));\n  const [annotationPanelText, setAnnotationPanelText] = useState(\n    Array(10).fill(\"\")\n  );\n  const [comicImages, setComicImages] = useState(Array(10).fill(null));\n  const [loading, setLoading] = useState(false);\n\n  const comicDisplayRef = useRef(null);\n\n  const handleDownloadComic = () => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas dimensions based on the comic display size\n    canvas.width = comicDisplayRef.current.offsetWidth;\n    canvas.height = comicDisplayRef.current.offsetHeight;\n\n    const comicPanels =\n    comicDisplayRef.current.querySelectorAll(\".comic-panel\");\n\n\n    const image = document.querySelector('.hero');\n    \n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n    comicPanels.forEach((panel, index) => {\n\n      const leftPanel = document.querySelector('.left');\n      const rect = leftPanel.getBoundingClientRect();\n      const img = panel.querySelector(\"img\");\n      if(!img){\n        return;\n      }\n    \n      const annotationBox = panel.querySelector(\".box1\");\n      const imgX = panel.offsetLeft -  (window.screen.width<800?0:rect.width ) - 64;\n      const imgY = panel.offsetTop - (window.screen.width<800?rect.height:0);\n      console.log(index,rect.width,rect.height,imgX,imgY,panel.offsetTop,panel.offsetLeft)\n      const imgWidth = img.width;\n      const imgHeight = img.height;\n  \n\n      // Draw the image onto the canvas\n      ctx.drawImage(img, imgX, imgY, imgWidth, imgHeight);\n\n      // Draw the annotation box onto the canvas\n      \n      if (annotationBox) {\n        const annotation = annotationBox.querySelector(\".annotation\").innerText;\n        const boxX = imgX + 20;\n        const boxY = imgY + annotationBox.offsetTop + 32;\n       \n        ctx.fillStyle = \"white\"; // Set the background color of the annotation box\n        ctx.fillRect(boxX, boxY, 230, 30);\n\n        ctx.font = \"20px Bangers\";\n        ctx.fillStyle = \"black\"; // Set the text color of the annotation\n        ctx.fillText(annotation, boxX + 10, boxY + 25); // Adjust the position as needed\n      }\n    });\n\n    // Convert the canvas content to a data URL and trigger download\n      const dataUrl = canvas.toDataURL(\"image/png\");\n      const a = document.createElement(\"a\");\n      a.href = dataUrl;\n      a.download = \"comic_collage.png\";\n      a.click(); \n  };\n\n  const handleInputChange = (index, value) => {\n    const newText = [...comicText];\n    newText[index] = value;\n    setComicText(newText);\n  };\n\n  const handleAnnotationChange = (index, value) => {\n    const newAnnotationText = [...annotationPanelText];\n    newAnnotationText[index] = value;\n    setAnnotationPanelText(newAnnotationText);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n\n      const images = await Promise.all(\n        comicText.map(async (text, index) => {\n          if (!text) {\n            return {\n              imageUrl: null,\n              annotation: \"Write some text instead of generating an image.\",\n            };\n          }\n\n          const data = { inputs: text };\n          const response = await query(data);\n\n          if (response.ok) {\n            const imageBlob = await response.blob();\n            const imageUrl = URL.createObjectURL(imageBlob);\n            return { imageUrl, annotation: annotationPanelText[index] };\n          } else {\n            console.error(\n              `Error for Panel ${index + 1}: ${response.statusText}`\n            );\n            return {\n              imageUrl: null,\n              annotation: `Error: ${response.statusText}`,\n            };\n          }\n        })\n      );\n\n      setComicImages(images);\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGenerateAnotherComic = () => {\n    setComicText(Array(10).fill(\"\"));\n    setAnnotationPanelText(Array(10).fill(\"\"));\n    setComicImages(Array(10).fill(null));\n  };\n\n  const query = async (data) => {\n    try {\n      const response = await fetch(API_URL, {\n        headers: {\n          Accept: \"image/png\",\n          Authorization: `Bearer ${API_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response;\n    } catch (error) {\n      console.error(\"Error in query function:\", error.message);\n      throw error;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"left\">\n          <header>\n            <h1>Imagine Your Comics</h1>\n          </header>\n          <form onSubmit={(e) => e.preventDefault()}>\n            {comicText.map((text, index) => (\n              <div key={index} className=\"panel-inputs\">\n                <div className=\"panel-text\">\n                  <textarea\n                    placeholder=\"Describe Image\"\n                    style={{ fontFamily: 'Bangers', fontSize:\"1vw\"}}\n                    className=\"textarea-name\"\n                    value={text}\n                    onChange={(e) => handleInputChange(index, e.target.value)}\n                  />\n                </div>\n                <div className=\"Annotation-text\">\n                  <textarea\n                    placeholder='Enter Annotation'\n                    style={{ fontFamily: 'Bangers', fontSize:\"1vw\"}}\n                    className=\"textarea-anot \"\n                    value={annotationPanelText[index]}\n                    onChange={(e) =>\n                      handleAnnotationChange(index, e.target.value)\n                    }\n                  />\n                </div>\n              </div>\n            ))}\n\n            <div className=\"buttons\">\n              <button type=\"button\" onClick={handleSubmit} disabled={loading}\n              style={{\n                fontSize: \"1vw\",\n                fontWeight: 600,\n                width:\"2vw\",\n                flex: 1,\n                padding: '10px',\n                background: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n              }}>\n                {loading ? \"Generating Comic...\" : \"Create Comic\"}\n              </button>\n              <button type=\"button\" onClick={handleGenerateAnotherComic}>\n                Restart\n              </button>\n            </div>\n          </form>\n        </div>\n        {/* {loading && <div className=\"loader\"></div>} */}\n        <div className=\"right\" ref={comicDisplayRef}>\n          <div className=\"comic-display\">\n            {comicImages.map(\n              (panel, index) =>\n                panel && (\n                  <div key={index} className=\"comic-panel\">\n                    {panel.imageUrl ? (\n                      <img\n                        src={panel.imageUrl}\n                        alt={`Create more ${index + 1}`}\n                        height=\"250px\"\n                      />\n                    ) : (\n                      <div></div>\n                    )}\n                    {panel.annotation!==\"\" && panel.annotation !==\n                    \"Write some text instead of generating an image.\" ? (\n                      <div className=\"box box1\">\n                        <div className=\"annotation\">{panel.annotation}</div>\n                      </div>\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n                )\n            )}\n          </div>\n          <button className=\"download\" onClick={handleDownloadComic}>Download Comic</button>\n        </div>\n      </div>\n        <img src={require('./Assets/Hero.jpg')} alt=\"\"  style={{display:\"none\"}} className=\"hero\"/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}